{
  "$schema": "https://json.schemastore.org/launchsettings.json",
  "iisSettings": {
    "windowsAuthentication": false,
    "anonymousAuthentication": true,
    "iisExpress": {
      "applicationUrl": "http://localhost:48010",
      "sslPort": 44352
    }
  },
  "profiles": {
    "InvAPI": {
      "commandName": "Project",
      "dotnetRunMessages": true,
      "launchBrowser": true,
      "launchUrl": "swagger",
      "applicationUrl": "https://localhost:7050;http://localhost:5099",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    },
    "IIS Express": {
      "commandName": "IISExpress",
      "launchBrowser": true,
      "launchUrl": "swagger",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    }
  }
}

dotnet ef dbcontext scaffold "Server=DAMASK_S1;Database=damask;Persist Security Info=False;user=api-user;Password=QFgQJkWi4t;TrustServerCertificate=True" Microsoft.EntityFrameworkCore.SqlServer -o Models --table public.link_oss
dotnet ef dbcontext scaffold "server=SV-SQL-02\\SVSQL02;database=damask;Persist Security Info=False;user=api-user;Password=QFgQJkWi4t;TrustServerCertificate=True" Microsoft.EntityFrameworkCore.SqlServer -o ggg -f



while (!rdr.EndOfStream)
                    {
                        var str = rdr.ReadLine();
                        Console.WriteLine(str);
                    }while (!rdr.EndOfStream)
                    {
                        var str = rdr.ReadLine();
                        Console.WriteLine(str);
                    }vwhile (!rdr.EndOfStream)
                    {
                        var str = rdr.ReadLine();
                        Console.WriteLine(str);
                    }